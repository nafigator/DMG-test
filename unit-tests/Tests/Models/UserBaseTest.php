<?php
namespace Tests\Models;

use Models\User;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-04-13 at 21:11:56.
 * @group models
 */
class UserBaseTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var User
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new User;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
	}

	/**
	 * @covers Models\UserBase::getId
	 */
	public function testGetId()
	{
		$expected = mt_rand();
		$this->object->setProperties(['id' => $expected]);
		$actual = $this->object->getId();

		$msg = 'UserBase::getId() returns wrong result';
		$this->assertSame($expected, $actual, $msg);
	}

	/**
	 * @covers Models\UserBase::getHash
	 * @todo   Implement testGetHash().
	 */
	public function testGetHash()
	{
		$expected = md5(mt_rand());
		$this->object->setProperties(['hash' => $expected]);
		$actual = $this->object->getHash();

		$msg = 'UserBase::getHash() returns wrong result';
		$this->assertSame($expected, $actual, $msg);
	}

	/**
	 * @covers Models\UserBase::getFirstName
	 * @todo   Implement testGetFirstName().
	 */
	public function testGetFirstName()
	{
		$expected = md5(mt_rand());
		$this->object->setProperties(['first_name' => $expected]);
		$actual = $this->object->getFirstName();

		$msg = 'UserBase::getFirstName() returns wrong result';
		$this->assertSame($expected, $actual, $msg);
	}

	/**
	 * @covers Models\UserBase::getLastName
	 * @todo   Implement testGetLastName().
	 */
	public function testGetLastName()
	{
		$expected = md5(mt_rand());
		$this->object->setProperties(['last_name' => $expected]);
		$actual = $this->object->getLastName();

		$msg = 'UserBase::getLastName() returns wrong result';
		$this->assertSame($expected, $actual, $msg);
	}

	/**
	 * @covers Models\UserBase::getPatronymic
	 * @todo   Implement testGetPatronymic().
	 */
	public function testGetPatronymic()
	{
		$expected = md5(mt_rand());
		$this->object->setProperties(['patronymic' => $expected]);
		$actual = $this->object->getPatronymic();

		$msg = 'UserBase::getPatronymic() returns wrong result';
		$this->assertSame($expected, $actual, $msg);
	}
}
